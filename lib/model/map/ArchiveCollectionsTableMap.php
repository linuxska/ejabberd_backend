<?php



/**
 * This class defines the structure of the 'archive_collections' table.
 *
 *
 * This class was autogenerated by Propel 1.6.7 on:
 *
 * Tue Sep 30 17:21:54 2014
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    propel.generator.lib.model.map
 */
class ArchiveCollectionsTableMap extends TableMap
{

    /**
     * The (dot-path) name of this class
     */
    const CLASS_NAME = 'lib.model.map.ArchiveCollectionsTableMap';

    /**
     * Initialize the table attributes, columns and validators
     * Relations are not initialized by this method since they are lazy loaded
     *
     * @return void
     * @throws PropelException
     */
    public function initialize()
    {
        // attributes
        $this->setName('archive_collections');
        $this->setPhpName('ArchiveCollections');
        $this->setClassname('ArchiveCollections');
        $this->setPackage('lib.model');
        $this->setUseIdGenerator(true);
        // columns
        $this->addPrimaryKey('ID', 'Id', 'INTEGER', true, 11, null);
        $this->addColumn('PREV_ID', 'PrevId', 'INTEGER', false, 11, null);
        $this->addColumn('NEXT_ID', 'NextId', 'INTEGER', false, 11, null);
        $this->addColumn('US', 'Us', 'VARCHAR', true, 2047, null);
        $this->addColumn('WITH_USER', 'WithUser', 'VARCHAR', true, 1023, null);
        $this->addColumn('WITH_SERVER', 'WithServer', 'VARCHAR', true, 1023, null);
        $this->addColumn('WITH_RESOURCE', 'WithResource', 'VARCHAR', true, 1023, null);
        $this->addColumn('UTC', 'Utc', 'TIMESTAMP', true, null, null);
        $this->addColumn('CHANGE_BY', 'ChangeBy', 'VARCHAR', false, 3071, null);
        $this->addColumn('CHANGE_UTC', 'ChangeUtc', 'TIMESTAMP', false, null, null);
        $this->addColumn('DELETED', 'Deleted', 'TINYINT', false, 4, null);
        $this->addColumn('SUBJECT', 'Subject', 'VARCHAR', false, 1023, null);
        $this->addColumn('THREAD', 'Thread', 'VARCHAR', false, 1023, null);
        $this->addColumn('CRYPT', 'Crypt', 'TINYINT', false, 4, null);
        $this->addColumn('EXTRA', 'Extra', 'LONGVARCHAR', false, null, null);
        // validators
    } // initialize()

    /**
     * Build the RelationMap objects for this table relationships
     */
    public function buildRelations()
    {
    } // buildRelations()

} // ArchiveCollectionsTableMap
